/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.border.MatteBorder;

/**
 *
 * @author loith
 */
public class DangNhapFRM extends javax.swing.JFrame {
    
    Color  matteBlue = new Color(14,142,233);  
    Color  matteGrey = new Color(223,230,233); 
    Color  normalGrey = new Color(153,153,153); 
  
    /**
     * Creates new form Login
     */
    
    
    public DangNhapFRM() {
         
       
        initComponents();
        setTitle("Đăng nhập");
         
        lblThuNho.setText("\u2012");
        lblThoat.setText("\u0078");
        
        initIcon();
        
        getRootPane().setDefaultButton(btnDangNhap);
        lblDangNhap.requestFocusInWindow();
        
    }
    public void initIcon()
    {
        ImageIcon logo = new ImageIcon(getClass().getResource("/img/logo.png"));
        logo = scale(logo,100,100);
        lblDangNhap.setIcon(logo);
        
        ImageIcon user = new ImageIcon(getClass().getResource("/img/userGrey.png"));
        user = scale(user,25,25);
        lblUserIcon.setIcon(user);
        
        ImageIcon pass = new ImageIcon(getClass().getResource("/img/passwordGrey.png"));
        pass = scale(pass,25,25);
        lblPassIcon.setIcon(pass);
    }
    
    public void login(String user,String pass) throws Exception
    {
        user = txtTenDangNhap.getText();
        pass = txtMatKhau.getText();
        
        if (user.equals("Tên đăng nhập") || user.equals("") ||  pass.equals("Mật khẩu") || pass.equals(""))
        {          
            lblCanhBao.setText("Tên đăng nhập hoặc Mật khẩu còn trống");
        } 
        
        else 
        {
            lblCanhBao.setText("");
            TaiKhoanDAO dao = new TaiKhoanDAO();
            
            if (dao.dangNhapThanhCong(user, pass))
            {   
                String quyen = dao.getQuyen(user, pass);
                System.out.println(quyen);
                ShopForm shop2 = new ShopForm(quyen,user);
                shop2.setVisible(true);
                this.dispose();
            }
            else lblCanhBao.setText("Tên đăng nhập hoặc Mật khẩu không đúng"); 
        }
    } 
   
    
     public ImageIcon scale(ImageIcon icon,int width, int height)
    {
        Image temp = icon.getImage();
        Image temp2 = temp.getScaledInstance(width, height, Image.SCALE_SMOOTH);
        icon = new ImageIcon();
        icon.setImage(temp2);
        return icon;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlDangNhap = new javax.swing.JPanel();
        lblDangNhap = new javax.swing.JLabel();
        txtTenDangNhap = new javax.swing.JTextField();
        btnDangNhap = new javax.swing.JButton();
        txtMatKhau = new javax.swing.JPasswordField();
        lblThoat = new javax.swing.JLabel();
        lblBar = new javax.swing.JLabel();
        lblCanhBao = new javax.swing.JLabel();
        lblThuNho = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblUserIcon = new javax.swing.JLabel();
        lblPassIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        pnlDangNhap.setBackground(new java.awt.Color(255, 255, 255));

        lblDangNhap.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblDangNhap.setForeground(new java.awt.Color(14, 142, 233));
        lblDangNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        txtTenDangNhap.setBackground(new java.awt.Color(255, 255, 255));
        txtTenDangNhap.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtTenDangNhap.setForeground(new java.awt.Color(153, 153, 153));
        txtTenDangNhap.setText("Tên đăng nhập");
        txtTenDangNhap.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 0, 2, 2, new java.awt.Color(153, 153, 153)));
        txtTenDangNhap.setSelectionColor(new java.awt.Color(14, 142, 233));
        txtTenDangNhap.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                txtTenDangNhapMouseDragged(evt);
            }
        });
        txtTenDangNhap.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTenDangNhapFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTenDangNhapFocusLost(evt);
            }
        });
        txtTenDangNhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtTenDangNhapMouseClicked(evt);
            }
        });
        txtTenDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenDangNhapActionPerformed(evt);
            }
        });
        txtTenDangNhap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTenDangNhapKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTenDangNhapKeyTyped(evt);
            }
        });

        btnDangNhap.setBackground(new java.awt.Color(14, 142, 233));
        btnDangNhap.setFont(new java.awt.Font("SansSerif", 1, 13)); // NOI18N
        btnDangNhap.setForeground(new java.awt.Color(255, 255, 255));
        btnDangNhap.setText("ĐĂNG NHẬP");
        btnDangNhap.setBorder(null);
        btnDangNhap.setContentAreaFilled(false);
        btnDangNhap.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDangNhap.setOpaque(true);
        btnDangNhap.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                btnDangNhapMouseMoved(evt);
            }
        });
        btnDangNhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDangNhapMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDangNhapMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDangNhapMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnDangNhapMouseReleased(evt);
            }
        });
        btnDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangNhapActionPerformed(evt);
            }
        });

        txtMatKhau.setBackground(new java.awt.Color(255, 255, 255));
        txtMatKhau.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txtMatKhau.setForeground(new java.awt.Color(153, 153, 153));
        txtMatKhau.setText("Mật khẩu");
        txtMatKhau.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 0, 2, 2, new java.awt.Color(153, 153, 153)));
        txtMatKhau.setEchoChar((char)0);
        txtMatKhau.setSelectionColor(new java.awt.Color(14, 142, 233));
        txtMatKhau.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                txtMatKhauMouseDragged(evt);
            }
        });
        txtMatKhau.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMatKhauFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMatKhauFocusLost(evt);
            }
        });
        txtMatKhau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMatKhauMouseClicked(evt);
            }
        });
        txtMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatKhauActionPerformed(evt);
            }
        });
        txtMatKhau.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMatKhauKeyPressed(evt);
            }
        });

        lblThoat.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        lblThoat.setForeground(new java.awt.Color(14, 142, 233));
        lblThoat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThoat.setText("x");
        lblThoat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThoatMouseClicked(evt);
            }
        });

        lblBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblBarMouseDragged(evt);
            }
        });
        lblBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblBarMousePressed(evt);
            }
        });

        lblCanhBao.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        lblCanhBao.setForeground(new java.awt.Color(255, 51, 51));
        lblCanhBao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        lblThuNho.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        lblThuNho.setForeground(new java.awt.Color(14, 142, 233));
        lblThuNho.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblThuNho.setText("-");
        lblThuNho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblThuNhoMouseClicked(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(14, 142, 233));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Đăng nhập");

        lblUserIcon.setBackground(new java.awt.Color(255, 255, 255));
        lblUserIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserIcon.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 0, new java.awt.Color(153, 153, 153)));
        lblUserIcon.setOpaque(true);

        lblPassIcon.setBackground(new java.awt.Color(255, 255, 255));
        lblPassIcon.setForeground(new java.awt.Color(223, 230, 233));
        lblPassIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPassIcon.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 0, new java.awt.Color(153, 153, 153)));
        lblPassIcon.setOpaque(true);

        javax.swing.GroupLayout pnlDangNhapLayout = new javax.swing.GroupLayout(pnlDangNhap);
        pnlDangNhap.setLayout(pnlDangNhapLayout);
        pnlDangNhapLayout.setHorizontalGroup(
            pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDangNhapLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblThuNho, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(lblThoat, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlDangNhapLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlDangNhapLayout.createSequentialGroup()
                        .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUserIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                            .addComponent(lblPassIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenDangNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(txtMatKhau))
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlDangNhapLayout.createSequentialGroup()
                        .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnDangNhap, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCanhBao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblDangNhap, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 242, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlDangNhapLayout.setVerticalGroup(
            pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDangNhapLayout.createSequentialGroup()
                .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblThoat, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(lblThuNho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlDangNhapLayout.createSequentialGroup()
                        .addComponent(lblBar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(lblDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblUserIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTenDangNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlDangNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(lblPassIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCanhBao, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pnlDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
      
    private void txtTenDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenDangNhapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenDangNhapActionPerformed

    private void txtTenDangNhapFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenDangNhapFocusGained
           // TODO add your handling code here:
           if (txtTenDangNhap.getText().equals("Tên đăng nhập")) {
            txtTenDangNhap.setText("");
            txtTenDangNhap.setForeground(Color.BLACK);
        }
        
        txtTenDangNhap.setBackground(Color.WHITE);
        txtTenDangNhap.setBorder( new MatteBorder(2,0,2,2,matteBlue));
        txtTenDangNhap.setForeground(matteBlue);
        
        ImageIcon user = new ImageIcon(getClass().getResource("/img/userBlue.png"));
        user = scale(user,25,25);
        lblUserIcon.setIcon(user);
        lblUserIcon.setBorder( new MatteBorder(2,2,2,0,matteBlue));
        lblUserIcon.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtTenDangNhapFocusGained

    private void txtTenDangNhapFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTenDangNhapFocusLost
        // TODO add your handling code here:
        if (txtTenDangNhap.getText().isEmpty()) {
            txtTenDangNhap.setForeground(Color.GRAY);
            txtTenDangNhap.setText("Tên đăng nhập");
        }
        if (txtTenDangNhap.getText().equals("Tên đăng nhập"))
        {
        txtTenDangNhap.setBackground(Color.WHITE);
        txtTenDangNhap.setBorder( new MatteBorder(2,0,2,2,normalGrey));
        txtTenDangNhap.setForeground(normalGrey);
        
        ImageIcon user = new ImageIcon(getClass().getResource("/img/userGrey.png"));
        user = scale(user,25,25);
        lblUserIcon.setIcon(user);
        lblUserIcon.setBorder( new MatteBorder(2,2,2,0,normalGrey));
        lblUserIcon.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtTenDangNhapFocusLost

    private void txtMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatKhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatKhauActionPerformed

    private void txtTenDangNhapKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenDangNhapKeyTyped
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtTenDangNhapKeyTyped

    private void txtMatKhauFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauFocusGained
        // TODO add your handling code here:
        if (txtMatKhau.getText().equals("Mật khẩu")) {
            txtMatKhau.setText("");
            txtMatKhau.setForeground(Color.BLACK);
            txtMatKhau.setEchoChar('\u26AB');
        }
        txtMatKhau.setBackground(Color.WHITE);
        txtMatKhau.setBorder( new MatteBorder(2,0,2,2,matteBlue));
        txtMatKhau.setForeground(matteBlue);
        
        ImageIcon pass = new ImageIcon(getClass().getResource("/img/passwordBlue.png"));
        pass = scale(pass,25,25);
        lblPassIcon.setIcon(pass);
        lblPassIcon.setBorder( new MatteBorder(2,2,2,0,matteBlue));
        lblPassIcon.setBackground(Color.WHITE);
    }//GEN-LAST:event_txtMatKhauFocusGained

    private void txtMatKhauFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMatKhauFocusLost
        // TODO add your hand  ling code here:
        if (txtMatKhau.getText().equals("")) {
            txtMatKhau.setForeground(Color.GRAY);      
            txtMatKhau.setText("Mật khẩu");
            txtMatKhau.setEchoChar((char) 0);
        }
        if (txtMatKhau.getText().equals("Mật khẩu"))
        {
        txtMatKhau.setBackground(Color.WHITE);
        txtMatKhau.setBorder( new MatteBorder(2,0,2,2,normalGrey));
        txtMatKhau.setForeground(normalGrey);
        
        ImageIcon pass = new ImageIcon(getClass().getResource("/img/passwordGrey.png"));
        pass = scale(pass,25,25);
        lblPassIcon.setIcon(pass);
        lblPassIcon.setBorder( new MatteBorder(2,2,2,0,normalGrey));
        lblPassIcon.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtMatKhauFocusLost

    private void lblThoatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThoatMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_lblThoatMouseClicked

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
         
    }//GEN-LAST:event_formMouseMoved

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_formMousePressed

    private void lblBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBarMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_lblBarMousePressed

    private void lblBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBarMouseDragged
        // TODO add your handling code here:
        setLocation (evt.getXOnScreen()-(getWidth()/2),evt.getYOnScreen()-10);
    }//GEN-LAST:event_lblBarMouseDragged

    private void btnDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangNhapActionPerformed
        try {
            // TODO add your handling code here:
            login(txtTenDangNhap.getText(),txtMatKhau.getText());
        } catch (Exception ex) {
            Logger.getLogger(DangNhapFRM.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnDangNhapActionPerformed

    private void btnDangNhapMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDangNhapMouseMoved
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnDangNhapMouseMoved

    private void btnDangNhapMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDangNhapMouseEntered
        // TODO add your handling code here:
       
    }//GEN-LAST:event_btnDangNhapMouseEntered

    private void btnDangNhapMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDangNhapMouseExited
        // TODO add your handling code here:
        
    }//GEN-LAST:event_btnDangNhapMouseExited

    private void btnDangNhapMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDangNhapMousePressed
        // TODO add your handling code here:
        //btnLogin.setSize(new Dimension(200,30));
        btnDangNhap.setBounds(57, 359, 232,40);
    }//GEN-LAST:event_btnDangNhapMousePressed

    private void btnDangNhapMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDangNhapMouseReleased
        // TODO add your handling code here:
        //btnLogin.setSize(new Dimension(231,46));
        btnDangNhap.setBounds(52, 358, 242 ,42);
    }//GEN-LAST:event_btnDangNhapMouseReleased

    private void txtTenDangNhapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTenDangNhapMouseClicked
        // TODO add your handling code here:
        lblCanhBao.setText("");
    }//GEN-LAST:event_txtTenDangNhapMouseClicked

    private void txtMatKhauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMatKhauMouseClicked
        // TODO add your handling code here:
        lblCanhBao.setText("");
    }//GEN-LAST:event_txtMatKhauMouseClicked

    private void txtMatKhauMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMatKhauMouseDragged
        // TODO add your handling code here:
        lblCanhBao.setText("");
    }//GEN-LAST:event_txtMatKhauMouseDragged

    private void txtTenDangNhapMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTenDangNhapMouseDragged
        // TODO add your handling code here:
        lblCanhBao.setText("");
    }//GEN-LAST:event_txtTenDangNhapMouseDragged

    private void txtMatKhauKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatKhauKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            btnDangNhap.doClick();
    }//GEN-LAST:event_txtMatKhauKeyPressed

    private void txtTenDangNhapKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenDangNhapKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            btnDangNhap.doClick();
    }//GEN-LAST:event_txtTenDangNhapKeyPressed

    private void lblThuNhoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblThuNhoMouseClicked
        // TODO add your handling code here:
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_lblThuNhoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangNhapFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangNhapFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangNhapFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangNhapFRM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DangNhapFRM().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangNhap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblBar;
    private javax.swing.JLabel lblCanhBao;
    private javax.swing.JLabel lblDangNhap;
    private javax.swing.JLabel lblPassIcon;
    private javax.swing.JLabel lblThoat;
    private javax.swing.JLabel lblThuNho;
    private javax.swing.JLabel lblUserIcon;
    private javax.swing.JPanel pnlDangNhap;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtTenDangNhap;
    // End of variables declaration//GEN-END:variables
}
