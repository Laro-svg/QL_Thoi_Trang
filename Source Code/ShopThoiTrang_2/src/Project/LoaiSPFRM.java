/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.border.MatteBorder;
import javax.swing.plaf.basic.BasicArrowButton;
import javax.swing.plaf.basic.BasicComboBoxUI;
import javax.swing.plaf.basic.BasicComboPopup;
import javax.swing.plaf.basic.ComboPopup;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author loith
 */
public class LoaiSPFRM extends javax.swing.JPanel {
    Color flatBlue = new Color(14, 142, 233);
    Color matteGrey = new Color(223, 230, 233);
    SanPhamFRM sp;
    /**
     * Creates new form LoaiSPFrame
     */
    public LoaiSPFRM(SanPhamFRM sp) throws Exception {
        initComponents();
        tblScrollPane.getVerticalScrollBar().setUI(new MyScrollBarUI());
        comboBoxMucTimKiem = myComboBox(comboBoxMucTimKiem);
        comboBoxLoaiTienTe = myComboBox(comboBoxLoaiTienTe);
        tblLoaiSP.setDefaultEditor(Object.class, null);
        this.sp = sp;
        docDatabase();
        autoGenerateID(txtMaLSP);
    }

    public JComboBox myComboBox(JComboBox box) {
        box.setRenderer(new MyComboBoxRenderer());
        box.setEditor(new MyComboBoxEditor());

        box.setUI(new BasicComboBoxUI() {
            @Override
            protected ComboPopup createPopup() {
                BasicComboPopup basicComboPopup = new BasicComboPopup(comboBox);
                basicComboPopup.setBorder(new MatteBorder(4, 4, 4, 4, flatBlue));
                return basicComboPopup;
            }

            @Override
            protected JButton createArrowButton() {
                Color matteGrey = new Color(223, 230, 233);
                Color flatBlue = new Color(14, 142, 233);

                BasicArrowButton custom = new BasicArrowButton(
                        BasicArrowButton.SOUTH, null, null, Color.WHITE, null);
                custom.setBorder(new MatteBorder(0, 0, 0, 0, flatBlue));
                return custom;
            }
        });

        return box;
    }

    public JTable initHeaderColor(JTable List, int r, int b, int g) {
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(new Color(r, b, g));
        headerRenderer.setForeground(Color.WHITE);

        for (int i = 0; i < List.getModel().getColumnCount(); i++) {
            List.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }

        return List;
    }
    
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rightClickMenu = new javax.swing.JPopupMenu();
        xuatExcelFile = new javax.swing.JMenuItem();
        nhapExcelFile = new javax.swing.JMenuItem();
        pnlMain = new javax.swing.JPanel();
        lblTieuDe = new javax.swing.JLabel();
        lblMaLSP = new javax.swing.JLabel();
        lblTenLSP = new javax.swing.JLabel();
        lblLoaiTienTe = new javax.swing.JLabel();
        txtMaLSP = new javax.swing.JTextField();
        txtTenLSP = new javax.swing.JTextField();
        pnlChucNang = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnHienThiTatCa = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        comboBoxMucTimKiem = new javax.swing.JComboBox<>();
        comboBoxLoaiTienTe = new javax.swing.JComboBox<>();
        pnlTable = new javax.swing.JPanel();
        tblScrollPane = new javax.swing.JScrollPane();
        tblLoaiSP = new javax.swing.JTable();

        xuatExcelFile.setText("Export to excel file");
        xuatExcelFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xuatExcelFileActionPerformed(evt);
            }
        });
        rightClickMenu.add(xuatExcelFile);

        nhapExcelFile.setText("Import Excel File\n");
        nhapExcelFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhapExcelFileActionPerformed(evt);
            }
        });
        rightClickMenu.add(nhapExcelFile);

        setPreferredSize(new java.awt.Dimension(677, 541));

        pnlMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlMain.setForeground(new java.awt.Color(14, 142, 233));
        pnlMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMainMouseClicked(evt);
            }
        });

        lblTieuDe.setBackground(new java.awt.Color(255, 255, 255));
        lblTieuDe.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(14, 142, 233));
        lblTieuDe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTieuDe.setText("Loại sản phẩm");

        lblMaLSP.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        lblMaLSP.setForeground(new java.awt.Color(14, 142, 233));
        lblMaLSP.setText("Mã loại sản phẩm:");

        lblTenLSP.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        lblTenLSP.setForeground(new java.awt.Color(14, 142, 233));
        lblTenLSP.setText("Tên loại sản phẩm:");

        lblLoaiTienTe.setFont(new java.awt.Font("SansSerif", 0, 16)); // NOI18N
        lblLoaiTienTe.setForeground(new java.awt.Color(14, 142, 233));
        lblLoaiTienTe.setText("Loại tiền tệ:");

        txtMaLSP.setBackground(new java.awt.Color(223, 230, 233));
        txtMaLSP.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtMaLSP.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(223, 230, 233)));
        txtMaLSP.setPreferredSize(new java.awt.Dimension(7, 24));

        txtTenLSP.setBackground(new java.awt.Color(223, 230, 233));
        txtTenLSP.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtTenLSP.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(223, 230, 233)));
        txtTenLSP.setPreferredSize(new java.awt.Dimension(7, 24));

        pnlChucNang.setBackground(new java.awt.Color(255, 255, 255));

        btnThem.setBackground(new java.awt.Color(14, 142, 233));
        btnThem.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus_icon.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(null);
        btnThem.setContentAreaFilled(false);
        btnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThem.setIconTextGap(15);
        btnThem.setOpaque(true);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(14, 142, 233));
        btnXoa.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/trash_icon.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.setBorder(null);
        btnXoa.setContentAreaFilled(false);
        btnXoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoa.setEnabled(false);
        btnXoa.setIconTextGap(15);
        btnXoa.setOpaque(true);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(14, 142, 233));
        btnSua.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pencil_icon.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setBorder(null);
        btnSua.setContentAreaFilled(false);
        btnSua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSua.setEnabled(false);
        btnSua.setIconTextGap(15);
        btnSua.setOpaque(true);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlChucNangLayout = new javax.swing.GroupLayout(pnlChucNang);
        pnlChucNang.setLayout(pnlChucNangLayout);
        pnlChucNangLayout.setHorizontalGroup(
            pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlChucNangLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        pnlChucNangLayout.setVerticalGroup(
            pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChucNangLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        btnHienThiTatCa.setBackground(new java.awt.Color(14, 142, 233));
        btnHienThiTatCa.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnHienThiTatCa.setForeground(new java.awt.Color(255, 255, 255));
        btnHienThiTatCa.setText("Hiển thị tất cả");
        btnHienThiTatCa.setBorder(null);
        btnHienThiTatCa.setContentAreaFilled(false);
        btnHienThiTatCa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHienThiTatCa.setOpaque(true);
        btnHienThiTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienThiTatCaActionPerformed(evt);
            }
        });

        txtTimKiem.setBackground(new java.awt.Color(223, 230, 233));
        txtTimKiem.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtTimKiem.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(223, 230, 233)));

        btnTimKiem.setBackground(new java.awt.Color(14, 142, 233));
        btnTimKiem.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search_icon.png"))); // NOI18N
        btnTimKiem.setBorder(null);
        btnTimKiem.setContentAreaFilled(false);
        btnTimKiem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTimKiem.setOpaque(true);
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        comboBoxMucTimKiem.setBackground(new java.awt.Color(14, 142, 233));
        comboBoxMucTimKiem.setEditable(true);
        comboBoxMucTimKiem.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        comboBoxMucTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        comboBoxMucTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã LSP", "Tên LSP", "Loại tiền tệ" }));
        comboBoxMucTimKiem.setToolTipText("null");
        comboBoxMucTimKiem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboBoxMucTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMucTimKiemActionPerformed(evt);
            }
        });

        comboBoxLoaiTienTe.setBackground(new java.awt.Color(14, 142, 233));
        comboBoxLoaiTienTe.setEditable(true);
        comboBoxLoaiTienTe.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        comboBoxLoaiTienTe.setForeground(new java.awt.Color(255, 255, 255));
        comboBoxLoaiTienTe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VNĐ", "USD" }));
        comboBoxLoaiTienTe.setToolTipText("null");
        comboBoxLoaiTienTe.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboBoxLoaiTienTe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxLoaiTienTeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblTenLSP, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                    .addComponent(lblLoaiTienTe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMaLSP)
                    .addComponent(btnHienThiTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboBoxLoaiTienTe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTenLSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtMaLSP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(106, 106, 106)
                        .addComponent(pnlChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(comboBoxMucTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addComponent(lblTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaLSP, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaLSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTenLSP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenLSP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLoaiTienTe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboBoxLoaiTienTe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34))
                    .addComponent(pnlChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnHienThiTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboBoxMucTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );

        pnlTable.setBackground(new java.awt.Color(255, 255, 255));

        tblLoaiSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblLoaiSP.setSelectionBackground(new java.awt.Color(14, 142, 233));
        tblLoaiSP.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tblLoaiSPFocusLost(evt);
            }
        });
        tblLoaiSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLoaiSPMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblLoaiSPMouseReleased(evt);
            }
        });
        tblScrollPane.setViewportView(tblLoaiSP);

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(tblScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tblScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    DefaultTableModel model = new DefaultTableModel() ;
    DefaultTableModel modelTimKiem;

    boolean flag = true;

    public Vector createHeader(Object[] columnNames) {
        Vector header = new Vector();
        for (Object colName : columnNames) {
            header.add(colName);
        }

        return header;
    }

    public void docDatabase() throws Exception {
        LoaiSPBUS bus = new LoaiSPBUS();
        if (LoaiSPBUS.getDslsp() == null) {
            bus.docDSLSP();
        }

        String[] columnNames = {"Mã loại sản phẩm", "Tên loại sản phẩm", "Loại tiền tệ"};
        Vector header = createHeader(columnNames);

        if (model.getRowCount() == 0) {
            model = new DefaultTableModel(header, 0);
        }

        for (LoaiSPDTO lsp : LoaiSPBUS.getDslsp()) {
            Vector row = new Vector();
            row.add(lsp.getMaLSP());
            row.add(lsp.getTenLSP());
            row.add(lsp.getLoaiTienTe());

            model.addRow(row);
        }

        tblLoaiSP.setModel(model);
        tblLoaiSP = initHeaderColor(tblLoaiSP, 14, 142, 233);

    }

    public void resetTxt() throws Exception {
        autoGenerateID(txtMaLSP);
        txtTenLSP.setText("");
        comboBoxLoaiTienTe.setSelectedItem("VNĐ");
    }

    public boolean checkEmptyTxt() {
        if (txtMaLSP.getText().equals("") || txtTenLSP.getText().equals("")) {
            return true;
        }
        return false;
    }
    
    void autoGenerateID(JTextField txt) throws Exception
    {
        LoaiSPBUS bus = new LoaiSPBUS();
        String ID = bus.taoIdTuDong();
        txt.setText(ID);
    }

    public void hienCacNutChucNang() {
        btnThem.setEnabled(true);
        btnSua.setEnabled(true);
        btnXoa.setEnabled(true);
    }

    public void anCacNutChucNang() {
        btnThem.setEnabled(false);
        btnSua.setEnabled(false);
        btnXoa.setEnabled(false);
    }
    
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if (checkEmptyTxt() == true)
        return;
        else {
            LoaiSPBUS bus = new LoaiSPBUS();

            if (bus.kiemTraTrung(txtMaLSP.getText())) {
                JOptionPane.showMessageDialog(this, "Mã loại sản phẩm đã tồn tại. Mời nhập Mã loại sản phẩm khác!");
                return;
            }

            LoaiSPDTO lsp = new LoaiSPDTO();
            lsp.setMaLSP(txtMaLSP.getText());
            lsp.setTenLSP(txtTenLSP.getText());
            lsp.setLoaiTienTe(comboBoxLoaiTienTe.getSelectedItem().toString());

            try {
                bus.them(lsp);
            } catch (Exception ex) {
                Logger.getLogger(LoaiSPFRM.class.getName()).log(Level.SEVERE, null, ex);
                return;
            }

            String[] columnNames = {"Mã loại sản phẩm", "Tên loại sản phẩm", "Loại tiền tệ"};
            Vector header = createHeader(columnNames);

            if (model.getRowCount() == 0) {
                model = new DefaultTableModel(header, 0);
            }

            Vector row = new Vector();
            row.add(lsp.getMaLSP());
            row.add(lsp.getTenLSP());
            row.add(lsp.getLoaiTienTe());

            model.addRow(row);
            tblLoaiSP.setModel(model);
            
            String[] arrayMaLSP = new String[LoaiSPBUS.getDslsp().size()];
            try{
                arrayMaLSP = bus.docComboBoxMaLSP();
            } catch (Exception ex) {
                Logger.getLogger(LoaiSPFRM.class.getName()).log(Level.SEVERE, null, ex);
            }
            try{
                sp.docComboBoxMaLSP(arrayMaLSP);
            } catch (Exception ex) {
                Logger.getLogger(LoaiSPFRM.class.getName()).log(Level.SEVERE, null, ex);
            }

            JOptionPane.showMessageDialog(this, "Thêm thành công!");
            try {
                resetTxt();
            } catch (Exception ex) {
                Logger.getLogger(LoaiSPFRM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int i = tblLoaiSP.getSelectedRow();
        if (i >= 0) {
            int selection = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa dòng này?", "Thông báo xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (selection == JOptionPane.YES_OPTION) {
                LoaiSPBUS bus = new LoaiSPBUS();
                if (flag == true) {
                    String maLSP = model.getValueAt(i, 0).toString();
                    try {
                        bus.xoa(maLSP);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Bạn không thể xóa dòng này!");
                        return;
                    }

                    model.removeRow(i);
                    tblLoaiSP.setModel(model);
                } 
                else
                {
                    String maLoaiSP = modelTimKiem.getValueAt(i, 0).toString();
                    try {
                        bus.xoa(maLoaiSP);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Bạn không thể xóa dòng này!");
                        return;
                    }

                    int index = bus.timIndex(maLoaiSP);

                    modelTimKiem.removeRow(i);
                    tblLoaiSP.setModel(modelTimKiem);

                    model.removeRow(index);
                }

                String[] arrayMaLSP = new String[LoaiSPBUS.getDslsp().size()];
            try{
                arrayMaLSP = bus.docComboBoxMaLSP();
            } catch (Exception ex) {
                Logger.getLogger(LoaiSPFRM.class.getName()).log(Level.SEVERE, null, ex);
            }
            try{
                sp.docComboBoxMaLSP(arrayMaLSP);
            } catch (Exception ex) {
                Logger.getLogger(LoaiSPFRM.class.getName()).log(Level.SEVERE, null, ex);
            }

                
                btnXoa.setEnabled(false);
                btnSua.setEnabled(false);
                JOptionPane.showMessageDialog(this, "Xóa thành công!");
                try {
                    resetTxt();
                } catch (Exception ex) {
                    Logger.getLogger(LoaiSPFRM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int temp = -1;
        int i = tblLoaiSP.getSelectedRow();
        if (i >= 0) {
            LoaiSPBUS bus = new LoaiSPBUS();
            String maLSPCu;
            if (flag == true) {
                maLSPCu = model.getValueAt(i, 0).toString();
            } else {
                temp = i;
                maLSPCu = modelTimKiem.getValueAt(temp, 0).toString();
                i = bus.timIndex(maLSPCu);
            }

            if (bus.kiemTraTrung(txtMaLSP.getText(), maLSPCu)) {
                JOptionPane.showMessageDialog(this, "Mã loại sản phẩm đã tồn tại. Mời nhập Mã loại sản phẩm khác!");
                return;
            } else {

                LoaiSPDTO lsp = new LoaiSPDTO();
                lsp.setMaLSP(txtMaLSP.getText());
                lsp.setTenLSP(txtTenLSP.getText());
                lsp.setLoaiTienTe(comboBoxLoaiTienTe.getSelectedItem().toString());

                LoaiSPDTO old = LoaiSPBUS.getDslsp().get(i);

                try {
                    bus.sua(lsp, old);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Bạn không thể thay đổi Mã loại sản phẩm này!");
                    return;
                }

                model.setValueAt(lsp.getMaLSP(), i, 0);
                model.setValueAt(lsp.getTenLSP(), i, 1);
                model.setValueAt(lsp.getLoaiTienTe(), i, 2);

                if (flag == false) {
                    modelTimKiem.setValueAt(lsp.getMaLSP(), temp, 0);
                    modelTimKiem.setValueAt(lsp.getTenLSP(), temp, 1);
                    modelTimKiem.setValueAt(lsp.getLoaiTienTe(), temp, 2);
                }

                String[] arrayMaLSP = new String[LoaiSPBUS.getDslsp().size()];
            try{
                arrayMaLSP = bus.docComboBoxMaLSP();
            } catch (Exception ex) {
                Logger.getLogger(LoaiSPFRM.class.getName()).log(Level.SEVERE, null, ex);
            }
            try{
                sp.docComboBoxMaLSP(arrayMaLSP);
            } catch (Exception ex) {
                Logger.getLogger(LoaiSPFRM.class.getName()).log(Level.SEVERE, null, ex);
            }

                
                hienCacNutChucNang();

                JOptionPane.showMessageDialog(this, "Sửa thành công!");
                try {
                    resetTxt();
                } catch (Exception ex) {
                    Logger.getLogger(LoaiSPFRM.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnHienThiTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienThiTatCaActionPerformed
        flag = true;
        tblLoaiSP.setModel(model);
        btnThem.setEnabled(true);
        tblLoaiSP = initHeaderColor(tblLoaiSP, 14, 142, 233);
    }//GEN-LAST:event_btnHienThiTatCaActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        String mucTimKiem = comboBoxMucTimKiem.getSelectedItem().toString();
        String duLieu = txtTimKiem.getText();

        String[] columnNames = {"Mã loại sản phẩm", "Tên loại sản phẩm", "Loại tiền tệ"};
        Vector header = createHeader(columnNames);

        if (duLieu.equals("") == false) {
            ArrayList<LoaiSPDTO> tempArr = new ArrayList<LoaiSPDTO>();
            LoaiSPBUS bus = new LoaiSPBUS();

            tempArr = bus.timKiem(mucTimKiem, duLieu);

            if (tempArr.size() > 0) {
                modelTimKiem = new DefaultTableModel();

                if (modelTimKiem.getRowCount() == 0) {
                    modelTimKiem = new DefaultTableModel(header, 0);
                }

                for (LoaiSPDTO lsp : tempArr) {
                    Vector row = new Vector();
                    row.add(lsp.getMaLSP());
                    row.add(lsp.getTenLSP());
                    row.add(lsp.getLoaiTienTe());

                    modelTimKiem.addRow(row);
                }
                tblLoaiSP.setModel(modelTimKiem);
                tblLoaiSP = initHeaderColor(tblLoaiSP, 14, 142, 233);
                
                flag = false;
                anCacNutChucNang();
                
                
            } else {
                JOptionPane.showMessageDialog(this, "Rất tiếc. Dữ liệu không được tìm thấy!");
            }
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void comboBoxMucTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMucTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxMucTimKiemActionPerformed

    private void comboBoxLoaiTienTeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxLoaiTienTeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxLoaiTienTeActionPerformed

    private void pnlMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMainMouseClicked
        try {
            
            resetTxt();
        } catch (Exception ex) {
            Logger.getLogger(LoaiSPFRM.class.getName()).log(Level.SEVERE, null, ex);
        }

        tblLoaiSP.clearSelection();
    }//GEN-LAST:event_pnlMainMouseClicked

    private void tblLoaiSPFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblLoaiSPFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_tblLoaiSPFocusLost

    private void tblLoaiSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLoaiSPMouseClicked
        int i = tblLoaiSP.getSelectedRow();
        if (i >= 0) {
            LoaiSPBUS bus = new LoaiSPBUS();
            LoaiSPDTO lsp = new LoaiSPDTO();
            if (flag == true) {
                lsp = LoaiSPBUS.getDslsp().get(i);
            } else {
                int index = bus.timIndex(modelTimKiem.getValueAt(i, 0).toString());
                lsp = LoaiSPBUS.getDslsp().get(index);
            }

            txtMaLSP.setText(lsp.getMaLSP());
            txtTenLSP.setText(lsp.getTenLSP());
            comboBoxLoaiTienTe.setSelectedItem(lsp.getLoaiTienTe());

            btnXoa.setEnabled(true);
            btnSua.setEnabled(true);
        }
    }//GEN-LAST:event_tblLoaiSPMouseClicked

    private void xuatExcelFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xuatExcelFileActionPerformed
        String[] columnNames = {"Mã loại sản phẩm", "Tên loại sản phẩm", "Loại tiền tệ"};
        try {
            XuatExcel xuat = new XuatExcel(tblLoaiSP, columnNames, "Loại Sản Phẩm");
        } catch (IOException ex) {
            Logger.getLogger(HoaDonFRM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_xuatExcelFileActionPerformed

    private void tblLoaiSPMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLoaiSPMouseReleased
        // TODO add your handling code here:
        if(evt.isPopupTrigger())
        {
            rightClickMenu.show(tblLoaiSP, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tblLoaiSPMouseReleased

    private void nhapExcelFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhapExcelFileActionPerformed
        // TODO add your handling code here:
        nhapExcel nhap = new nhapExcel(tblLoaiSP);
        DefaultTableModel newModel = nhap.importExcel();
        if(newModel.getRowCount() > 0)
        {
            tblLoaiSP.setModel(newModel);
            tblLoaiSP = initHeaderColor(tblLoaiSP, 14, 142, 233);
        }
    }//GEN-LAST:event_nhapExcelFileActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHienThiTatCa;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> comboBoxLoaiTienTe;
    private javax.swing.JComboBox<String> comboBoxMucTimKiem;
    private javax.swing.JLabel lblLoaiTienTe;
    private javax.swing.JLabel lblMaLSP;
    private javax.swing.JLabel lblTenLSP;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JMenuItem nhapExcelFile;
    private javax.swing.JPanel pnlChucNang;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JPopupMenu rightClickMenu;
    private javax.swing.JTable tblLoaiSP;
    private javax.swing.JScrollPane tblScrollPane;
    private javax.swing.JTextField txtMaLSP;
    private javax.swing.JTextField txtTenLSP;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JMenuItem xuatExcelFile;
    // End of variables declaration//GEN-END:variables
}
