/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Project;

import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.border.MatteBorder;
import javax.swing.plaf.basic.BasicArrowButton;
import javax.swing.plaf.basic.BasicComboBoxUI;
import javax.swing.plaf.basic.BasicComboPopup;
import javax.swing.plaf.basic.ComboPopup;
import javax.swing.table.DefaultTableCellRenderer;
import com.toedter.calendar.JDateChooser;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author loith
 */
public class KhuyenMaiFRM extends javax.swing.JPanel {

    /**
     * Creates new form KhuyenMaiFRM
     */
    Color flatBlue = new Color(14,142,233);
    Color matteGrey = new Color(223,230,233);
    ChiTietKMFrame ctkm; 
    public KhuyenMaiFRM() throws Exception {
        initComponents();
        tblScrollPane.getVerticalScrollBar().setUI(new MyScrollBarUI());
        tblKhuyenMai = initHeaderColor(tblKhuyenMai,14,142,233); 
        comboBoxMucTimKiem = myComboBox(comboBoxMucTimKiem);
        DCNgayBatDau = myDateChooser(DCNgayBatDau);
        DCNgayKetThuc = myDateChooser(DCNgayKetThuc);      
        docDatabase();
        autoGenerateID(txtMaKM);
        tblKhuyenMai = setColumnWidth(tblKhuyenMai);
    }
    
     public void resetTxt() throws Exception {
        autoGenerateID(txtMaKM); 
        txtTenKM.setText("");
        txtGiaDHToiThieu.setText("");
        DCNgayBatDau.setCalendar(null);
        DCNgayKetThuc.setCalendar(null);
        txtPhanTramKM.setText("");
    }
    
     public JTable setColumnWidth(JTable table)
    {         
//        table.getColumnModel().getColumn(1).setPreferredWidth(100);
//        table.getColumnModel().getColumn(5).setPreferredWidth(40);
        return table;
    }
     
    public JDateChooser myDateChooser(JDateChooser chooser)
    {   
        JTextFieldDateEditor dateChooserEditor = ((JTextFieldDateEditor)chooser.getDateEditor());
        dateChooserEditor.setBackground(matteGrey);
        dateChooserEditor.setBorder(new MatteBorder(3,3,3,3,matteGrey));
        dateChooserEditor.setEditable(false);
        return chooser;
    }
    
    public JComboBox myComboBox(JComboBox box)
    {   
        box.setRenderer(new MyComboBoxRenderer());
        box.setEditor(new MyComboBoxEditor());
        
        box.setUI(new BasicComboBoxUI() 
        {
            @Override
            protected ComboPopup createPopup() 
            {
                BasicComboPopup basicComboPopup = new BasicComboPopup(comboBox);
                basicComboPopup.setBorder(new MatteBorder(4,4,4,4,flatBlue));
                return basicComboPopup;
            }
            
            @Override 
            protected JButton createArrowButton() 
            {
                Color matteGrey = new Color(223,230,233);
                Color flatBlue = new Color(14,142,233);
        
                BasicArrowButton custom = new BasicArrowButton(
                BasicArrowButton.SOUTH, null, null, Color.WHITE, null);
                custom.setBorder(new MatteBorder(0,0,0,0,flatBlue));
                return custom;
            }
        }); 

       return box;
    }
    public JTable initHeaderColor(JTable List,int r,int b, int g)
    {
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(new Color(r, b, g));
        headerRenderer.setForeground(Color.WHITE);
        
            for (int i = 0; i < List.getModel().getColumnCount(); i++) 
            {
                List.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
            }
        
        return List;
    }
    
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rightClickMenu = new javax.swing.JPopupMenu();
        xuatExcelFile = new javax.swing.JMenuItem();
        nhapExcelFile = new javax.swing.JMenuItem();
        pnlMain = new javax.swing.JPanel();
        lblTieuDe = new javax.swing.JLabel();
        lblMaHD = new javax.swing.JLabel();
        lblKhachHang = new javax.swing.JLabel();
        lblNhanVien = new javax.swing.JLabel();
        lblNgayHD = new javax.swing.JLabel();
        txtMaKM = new javax.swing.JTextField();
        txtTenKM = new javax.swing.JTextField();
        txtGiaDHToiThieu = new javax.swing.JTextField();
        pnlChucNang = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        lblTongTien = new javax.swing.JLabel();
        txtPhanTramKM = new javax.swing.JTextField();
        lblMaKM = new javax.swing.JLabel();
        btnHienThiTatCa = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        btnHienThiTatCaChiTiet = new javax.swing.JButton();
        btnHienThiChiTiet = new javax.swing.JButton();
        comboBoxMucTimKiem = new javax.swing.JComboBox<>();
        DCNgayBatDau = new com.toedter.calendar.JDateChooser();
        DCNgayKetThuc = new com.toedter.calendar.JDateChooser();
        btnShow = new javax.swing.JButton();
        pnlTable = new javax.swing.JPanel();
        tblScrollPane = new javax.swing.JScrollPane();
        tblKhuyenMai = new javax.swing.JTable();

        xuatExcelFile.setText("Export to excel file");
        xuatExcelFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xuatExcelFileActionPerformed(evt);
            }
        });
        rightClickMenu.add(xuatExcelFile);

        nhapExcelFile.setText("Import Excel File\n");
        nhapExcelFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhapExcelFileActionPerformed(evt);
            }
        });
        rightClickMenu.add(nhapExcelFile);

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        pnlMain.setBackground(new java.awt.Color(255, 255, 255));
        pnlMain.setForeground(new java.awt.Color(14, 142, 233));
        pnlMain.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                pnlMainMouseMoved(evt);
            }
        });
        pnlMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnlMainMouseClicked(evt);
            }
        });

        lblTieuDe.setBackground(new java.awt.Color(255, 255, 255));
        lblTieuDe.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        lblTieuDe.setForeground(new java.awt.Color(14, 142, 233));
        lblTieuDe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTieuDe.setText("KHUYẾN MÃI");
        lblTieuDe.setOpaque(true);

        lblMaHD.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblMaHD.setForeground(new java.awt.Color(14, 142, 233));
        lblMaHD.setText("Mã KM:");

        lblKhachHang.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblKhachHang.setForeground(new java.awt.Color(14, 142, 233));
        lblKhachHang.setText("Tên KM:");

        lblNhanVien.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNhanVien.setForeground(new java.awt.Color(14, 142, 233));
        lblNhanVien.setText("Giá ĐH tối thiểu:");

        lblNgayHD.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblNgayHD.setForeground(new java.awt.Color(14, 142, 233));
        lblNgayHD.setText("Phần trăm KM:");

        txtMaKM.setBackground(new java.awt.Color(223, 230, 233));
        txtMaKM.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtMaKM.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(223, 230, 233)));

        txtTenKM.setBackground(new java.awt.Color(223, 230, 233));
        txtTenKM.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtTenKM.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(223, 230, 233)));

        txtGiaDHToiThieu.setBackground(new java.awt.Color(223, 230, 233));
        txtGiaDHToiThieu.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtGiaDHToiThieu.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(223, 230, 233)));

        pnlChucNang.setBackground(new java.awt.Color(255, 255, 255));

        btnThem.setBackground(new java.awt.Color(14, 142, 233));
        btnThem.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/plus_icon.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(null);
        btnThem.setContentAreaFilled(false);
        btnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThem.setIconTextGap(15);
        btnThem.setOpaque(true);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(14, 142, 233));
        btnXoa.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/trash_icon.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.setBorder(null);
        btnXoa.setContentAreaFilled(false);
        btnXoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoa.setEnabled(false);
        btnXoa.setIconTextGap(15);
        btnXoa.setOpaque(true);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(14, 142, 233));
        btnSua.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnSua.setForeground(new java.awt.Color(255, 255, 255));
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pencil_icon.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setBorder(null);
        btnSua.setContentAreaFilled(false);
        btnSua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSua.setEnabled(false);
        btnSua.setIconTextGap(15);
        btnSua.setOpaque(true);
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlChucNangLayout = new javax.swing.GroupLayout(pnlChucNang);
        pnlChucNang.setLayout(pnlChucNangLayout);
        pnlChucNangLayout.setHorizontalGroup(
            pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlChucNangLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnXoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                    .addComponent(btnSua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        pnlChucNangLayout.setVerticalGroup(
            pnlChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlChucNangLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        lblTongTien.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblTongTien.setForeground(new java.awt.Color(14, 142, 233));
        lblTongTien.setText("Ngày bắt đầu:");

        txtPhanTramKM.setBackground(new java.awt.Color(223, 230, 233));
        txtPhanTramKM.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtPhanTramKM.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(223, 230, 233)));
        txtPhanTramKM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhanTramKMActionPerformed(evt);
            }
        });

        lblMaKM.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        lblMaKM.setForeground(new java.awt.Color(14, 142, 233));
        lblMaKM.setText("Ngày kết thúc:");

        btnHienThiTatCa.setBackground(new java.awt.Color(14, 142, 233));
        btnHienThiTatCa.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnHienThiTatCa.setForeground(new java.awt.Color(255, 255, 255));
        btnHienThiTatCa.setText("Hiển thị tất cả");
        btnHienThiTatCa.setBorder(null);
        btnHienThiTatCa.setContentAreaFilled(false);
        btnHienThiTatCa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHienThiTatCa.setOpaque(true);
        btnHienThiTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienThiTatCaActionPerformed(evt);
            }
        });

        txtTimKiem.setBackground(new java.awt.Color(223, 230, 233));
        txtTimKiem.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        txtTimKiem.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(223, 230, 233)));

        btnTimKiem.setBackground(new java.awt.Color(14, 142, 233));
        btnTimKiem.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search_icon.png"))); // NOI18N
        btnTimKiem.setBorder(null);
        btnTimKiem.setContentAreaFilled(false);
        btnTimKiem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTimKiem.setOpaque(true);
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnHienThiTatCaChiTiet.setBackground(new java.awt.Color(14, 142, 233));
        btnHienThiTatCaChiTiet.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnHienThiTatCaChiTiet.setForeground(new java.awt.Color(255, 255, 255));
        btnHienThiTatCaChiTiet.setText("Hiển thị tất cả chi tiết");
        btnHienThiTatCaChiTiet.setBorder(null);
        btnHienThiTatCaChiTiet.setContentAreaFilled(false);
        btnHienThiTatCaChiTiet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHienThiTatCaChiTiet.setOpaque(true);
        btnHienThiTatCaChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienThiTatCaChiTietActionPerformed(evt);
            }
        });

        btnHienThiChiTiet.setBackground(new java.awt.Color(14, 142, 233));
        btnHienThiChiTiet.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnHienThiChiTiet.setForeground(new java.awt.Color(255, 255, 255));
        btnHienThiChiTiet.setText("Hiển thị chi tiết");
        btnHienThiChiTiet.setBorder(null);
        btnHienThiChiTiet.setContentAreaFilled(false);
        btnHienThiChiTiet.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHienThiChiTiet.setOpaque(true);
        btnHienThiChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHienThiChiTietActionPerformed(evt);
            }
        });

        comboBoxMucTimKiem.setBackground(new java.awt.Color(14, 142, 233));
        comboBoxMucTimKiem.setEditable(true);
        comboBoxMucTimKiem.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        comboBoxMucTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        comboBoxMucTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mã KM", "Tên KM", "Giá ĐH tối thiểu", "Ngày bắt đầu", "Ngày kết thúc", "Phần trăm KM" }));
        comboBoxMucTimKiem.setToolTipText("null");
        comboBoxMucTimKiem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        comboBoxMucTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMucTimKiemActionPerformed(evt);
            }
        });

        DCNgayBatDau.setBackground(new java.awt.Color(223, 230, 233));
        DCNgayBatDau.setDateFormatString("y-MM-dd");
        DCNgayBatDau.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                DCNgayBatDauMouseMoved(evt);
            }
        });
        DCNgayBatDau.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DCNgayBatDauMouseClicked(evt);
            }
        });

        DCNgayKetThuc.setDateFormatString("y-MM-d");

        btnShow.setBackground(new java.awt.Color(14, 142, 233));
        btnShow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eye_icon_white.png"))); // NOI18N
        btnShow.setBorder(null);
        btnShow.setContentAreaFilled(false);
        btnShow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnShow.setOpaque(true);
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMainLayout = new javax.swing.GroupLayout(pnlMain);
        pnlMain.setLayout(pnlMainLayout);
        pnlMainLayout.setHorizontalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTieuDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblKhachHang, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMaHD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTongTien, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMaKM)
                            .addComponent(txtTenKM)
                            .addComponent(DCNgayBatDau, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(40, 40, 40))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnHienThiTatCaChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addComponent(btnHienThiChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnShow, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addComponent(lblNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtGiaDHToiThieu, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createSequentialGroup()
                                        .addComponent(lblNgayHD, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(pnlMainLayout.createSequentialGroup()
                                        .addComponent(lblMaKM, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)))
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(DCNgayKetThuc, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(txtPhanTramKM))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addComponent(comboBoxMucTimKiem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnHienThiTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20))))
        );
        pnlMainLayout.setVerticalGroup(
            pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMainLayout.createSequentialGroup()
                .addComponent(lblTieuDe, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblMaHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtMaKM, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtGiaDHToiThieu, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPhanTramKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNgayHD))
                                .addGap(19, 19, 19)
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblMaKM, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DCNgayKetThuc, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pnlMainLayout.createSequentialGroup()
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblKhachHang)
                                    .addComponent(txtTenKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DCNgayBatDau, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(pnlChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnHienThiTatCaChiTiet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnHienThiTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboBoxMucTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlMainLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btnShow, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnHienThiChiTiet, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pnlTable.setBackground(new java.awt.Color(255, 255, 255));

        tblKhuyenMai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblKhuyenMai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhuyenMaiMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblKhuyenMaiMouseReleased(evt);
            }
        });
        tblScrollPane.setViewportView(tblKhuyenMai);

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(tblScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tblScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlMain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    DefaultTableModel model = new DefaultTableModel() ;
    DefaultTableModel modelTimKiem;
    boolean flag = true;

    public Vector createHeader(Object[] columnNames) {
        Vector header = new Vector();
        for (Object colName : columnNames) {
            header.add(colName);
        }

        return header;
    }

    public void docDatabase() throws Exception {
        KhuyenMaiBUS bus = new KhuyenMaiBUS();
        if (KhuyenMaiBUS.getDskm() == null) {
            bus.docDSKM();
        }

        String[] columnNames = {"Mã KM", "Tên KM", "Giá ĐH tối thiểu", "Ngày bắt đầu", "Ngày kết thúc", "Phần trăm KM"};
        Vector header = createHeader(columnNames);

        if (model.getRowCount() == 0) {
            model = new DefaultTableModel(header, 0);
        }

        for (KhuyenMaiDTO km : KhuyenMaiBUS.getDskm()) {
            Vector row = new Vector();
            row.add(km.getMaKM());
            row.add(km.getTenKM());
            row.add(km.getGiaDHToiThieu());
            row.add(km.getNgayBatDau());
            row.add(km.getNgayKetThuc());
            row.add(km.getPhanTramKhuyenMai());

            model.addRow(row);
        }

        tblKhuyenMai.setModel(model);
        tblKhuyenMai = initHeaderColor(tblKhuyenMai, 14, 142, 233);

    }
    
    public boolean checkEmptyTxt() {
        if (txtMaKM.getText().equals("") || txtTenKM.getText().equals("") 
           || txtGiaDHToiThieu.getText().equals("") || DCNgayBatDau.getDate() == null 
           || DCNgayKetThuc.getDate() == null || txtPhanTramKM.getText().equals(""))
        {
            return true;
        }
        return false;
    }
    
    void autoGenerateID(JTextField txt) throws Exception
    {
        KhuyenMaiBUS bus = new KhuyenMaiBUS();
        String ID = bus.taoIdTuDong();
        txt.setText(ID);
    }

    public void hienCacNutChucNang() {
        btnThem.setEnabled(true);
        btnSua.setEnabled(true);
        btnXoa.setEnabled(true);
    }

    public void anCacNutChucNang() {
        btnThem.setEnabled(false);
        btnSua.setEnabled(false);
        btnXoa.setEnabled(false);
    }
    
    private void tblKhuyenMaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhuyenMaiMouseClicked
        int i = tblKhuyenMai.getSelectedRow();
        if (i >= 0) {
            KhuyenMaiBUS bus = new KhuyenMaiBUS();
            KhuyenMaiDTO km = new KhuyenMaiDTO();
            if (flag == true) {
                km = KhuyenMaiBUS.getDskm().get(i);
            } else {
                int index = bus.timIndex(modelTimKiem.getValueAt(i, 0).toString());
                km = KhuyenMaiBUS.getDskm().get(index);
            }

            txtMaKM.setText(km.getMaKM());
            txtTenKM.setText(km.getTenKM());
            txtGiaDHToiThieu.setText(Float.toString(km.getGiaDHToiThieu()));
            try {
                Date ngayBatDau = new SimpleDateFormat("yyyy-MM-dd").parse(km.getNgayBatDau());
                DCNgayBatDau.setDate(ngayBatDau);
            } catch (ParseException ex) {
                Logger.getLogger(KhuyenMaiFRM.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                Date ngayKetThuc = new SimpleDateFormat("yyyy-MM-dd").parse(km.getNgayKetThuc());
                DCNgayKetThuc.setDate(ngayKetThuc);
            } catch (ParseException ex) {
                Logger.getLogger(KhuyenMaiFRM.class.getName()).log(Level.SEVERE, null, ex);
            }
            txtPhanTramKM.setText(Float.toString(km.getPhanTramKhuyenMai()));

            btnXoa.setEnabled(true);
            btnSua.setEnabled(true);
        }
    }//GEN-LAST:event_tblKhuyenMaiMouseClicked

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
         
    }//GEN-LAST:event_formMouseMoved

    private void pnlMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMainMouseClicked
        // TODO add your handling code here:

        //        Date date = DCNgayKM.getDate();
        //        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        //        String strDate = df.format(date);
        //
        //        System.out.println(strDate);
    }//GEN-LAST:event_pnlMainMouseClicked

    private void pnlMainMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlMainMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_pnlMainMouseMoved

    private void comboBoxMucTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMucTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxMucTimKiemActionPerformed

    private void btnHienThiChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienThiChiTietActionPerformed
        // TODO add your handling code here:
        int i = tblKhuyenMai.getSelectedRow();
        if (i >= 0)
        {
            try {
                ctkm = new ChiTietKMFrame(model.getValueAt(i, 0).toString());
                ctkm.setVisible(true);
                ctkm.setDefaultCloseOperation(ctkm.HIDE_ON_CLOSE);
            }
            catch (Exception ex) {
                Logger.getLogger(KhuyenMaiFRM.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnHienThiChiTietActionPerformed

    private void btnHienThiTatCaChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienThiTatCaChiTietActionPerformed
        // TODO add your handling code here:
        try {
            ctkm = new ChiTietKMFrame(null);
            ctkm.setVisible(true);
            ctkm.setDefaultCloseOperation(ctkm.HIDE_ON_CLOSE);

        } catch (Exception ex) {
            Logger.getLogger(KhuyenMaiFRM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnHienThiTatCaChiTietActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        String mucTimKiem = comboBoxMucTimKiem.getSelectedItem().toString();
        String duLieu = txtTimKiem.getText();

        String[] columnNames = {"Mã KM", "Tên KM", "Giá ĐH tối thiểu", "Ngày bắt đầu", "Ngày kết thúc", "Phần trăm KM"};
        Vector header = createHeader(columnNames);

        if (duLieu.equals("") == false) {
            ArrayList<KhuyenMaiDTO> tempArr = new ArrayList<KhuyenMaiDTO>();
            KhuyenMaiBUS bus = new KhuyenMaiBUS();

            tempArr = bus.timKiem(mucTimKiem, duLieu);

            if (tempArr.size() > 0) {
                modelTimKiem = new DefaultTableModel();

                if (modelTimKiem.getRowCount() == 0) {
                    modelTimKiem = new DefaultTableModel(header, 0);
                }

                for (KhuyenMaiDTO km : tempArr) {
                    Vector row = new Vector();
                    row.add(km.getMaKM());
                    row.add(km.getTenKM());
                    row.add(km.getGiaDHToiThieu());
                    row.add(km.getNgayBatDau());
                    row.add(km.getNgayKetThuc());
                    row.add(km.getPhanTramKhuyenMai());

                    modelTimKiem.addRow(row);
                }
                tblKhuyenMai.setModel(modelTimKiem);
                tblKhuyenMai = initHeaderColor(tblKhuyenMai, 14, 142, 233);
                tblKhuyenMai = setColumnWidth(tblKhuyenMai);

                flag = false;
                anCacNutChucNang();

            } else {
                JOptionPane.showMessageDialog(this, "Rất tiếc. Dữ liệu không được tìm thấy!");
            }
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnHienThiTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHienThiTatCaActionPerformed
        // TODO add your handling code here:
        flag = true;
        tblKhuyenMai.setModel(model);
        btnThem.setEnabled(true);
        tblKhuyenMai = initHeaderColor(tblKhuyenMai, 14, 142, 233);
        tblKhuyenMai = setColumnWidth(tblKhuyenMai);
    }//GEN-LAST:event_btnHienThiTatCaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        int temp = -1;
        int i = tblKhuyenMai.getSelectedRow();
        if (i >= 0) {
            KhuyenMaiBUS bus = new KhuyenMaiBUS();
            String maKMCu;
            if (flag == true) {
                maKMCu = model.getValueAt(i, 0).toString();
            } else {
                temp = i;
                maKMCu = modelTimKiem.getValueAt(temp, 0).toString();
                i = bus.timIndex(maKMCu);
            }

            if (bus.kiemTraTrung(txtMaKM.getText(), maKMCu)) {
                JOptionPane.showMessageDialog(this, "Mã khuyến mãi đã tồn tại. Mời nhập Mã khuyến mãi khác!");
                return;
            } else {

                KhuyenMaiDTO km = new KhuyenMaiDTO();
                
                km.setMaKM(txtMaKM.getText());
                km.setTenKM(txtTenKM.getText());
                km.setGiaDHToiThieu(Float.parseFloat(txtGiaDHToiThieu.getText()));
                DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                Date ngayBatDau = DCNgayBatDau.getDate();
                km.setNgayBatDau(df.format(ngayBatDau));
                Date ngayKetThuc = DCNgayKetThuc.getDate();
                km.setNgayKetThuc(df.format(ngayKetThuc));
                km.setPhanTramKhuyenMai(Float.parseFloat(txtPhanTramKM.getText()));

                KhuyenMaiDTO old = KhuyenMaiBUS.getDskm().get(i);

                try {
                    bus.sua(km, old);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Bạn không thể thay đổi Mã khuyến mãi này!");
                    return;
                }

                model.setValueAt(km.getMaKM(), i, 0);
                model.setValueAt(km.getTenKM(), i, 1);
                model.setValueAt(km.getGiaDHToiThieu(), i, 2);
                model.setValueAt(km.getNgayBatDau(), i, 3);
                model.setValueAt(km.getNgayKetThuc(), i, 4);
                model.setValueAt(km.getPhanTramKhuyenMai(), i, 5);

                if (flag == false) {
                    modelTimKiem.setValueAt(km.getMaKM(), temp, 0);
                    modelTimKiem.setValueAt(km.getTenKM(), temp, 1);
                    modelTimKiem.setValueAt(km.getGiaDHToiThieu(), temp, 2);
                    modelTimKiem.setValueAt(km.getNgayBatDau(), temp, 3);
                    modelTimKiem.setValueAt(km.getNgayKetThuc(), temp, 4);
                    modelTimKiem.setValueAt(km.getPhanTramKhuyenMai(), temp, 5);
                }

                hienCacNutChucNang();

                JOptionPane.showMessageDialog(this, "Sửa thành công!");
                try {
                    resetTxt();
                } catch (Exception ex) {
                    Logger.getLogger(KhuyenMaiFRM.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int i = tblKhuyenMai.getSelectedRow();
        if (i >= 0) {
            int selection = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa dòng này?", "Thông báo xác nhận", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (selection == JOptionPane.YES_OPTION) {
                KhuyenMaiBUS bus = new KhuyenMaiBUS();
                if (flag == true)
                {
                    String maKM = model.getValueAt(i, 0).toString();
                    try {
                        bus.xoa(maKM);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Bạn không thể xóa dòng này!");
                        return;
                    }

                    model.removeRow(i);
                    tblKhuyenMai.setModel(model);
                }
                else
                {
                    String maKM = modelTimKiem.getValueAt(i, 0).toString();
                    try {
                        bus.xoa(maKM);
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Bạn không thể xóa dòng này!");
                        return;
                    }

                    int index = bus.timIndex(maKM);

                    modelTimKiem.removeRow(i);
                    tblKhuyenMai.setModel(modelTimKiem);

                    model.removeRow(index);
                }

                btnXoa.setEnabled(false);
                btnSua.setEnabled(false);
                JOptionPane.showMessageDialog(this, "Xóa thành công!");
                try {
                    resetTxt();
                } catch (Exception ex) {
                    Logger.getLogger(KhuyenMaiFRM.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if (checkEmptyTxt() == true)
        return;
        else {
            KhuyenMaiBUS bus = new KhuyenMaiBUS();

            if (bus.kiemTraTrung(txtMaKM.getText())) {
                JOptionPane.showMessageDialog(this, "Mã khuyến mãi đã tồn tại. Mời nhập Mã khuyến mãi khác!");
                return;
            }

            KhuyenMaiDTO km = new KhuyenMaiDTO();

            km.setMaKM(txtMaKM.getText());
            km.setTenKM(txtTenKM.getText());
            km.setGiaDHToiThieu(Float.parseFloat(txtGiaDHToiThieu.getText()));
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            Date ngayBatDau = DCNgayBatDau.getDate();
            km.setNgayBatDau(df.format(ngayBatDau));
            Date ngayKetThuc = DCNgayKetThuc.getDate();
            km.setNgayKetThuc(df.format(ngayKetThuc));
            km.setPhanTramKhuyenMai(Float.parseFloat(txtPhanTramKM.getText()));

            try {
                bus.them(km);
            } catch (Exception ex) {
                Logger.getLogger(KhuyenMaiFRM.class.getName()).log(Level.SEVERE, null, ex);
            }

            String[] columnNames = {"Mã KM", "Tên KM", "Giá ĐH tối thiểu", "Ngày bắt đầu", "Ngày kết thúc", "Phần trăm KM"};
            Vector header = createHeader(columnNames);

            if (model.getRowCount() == 0) {
                model = new DefaultTableModel(header, 0);
            }

            Vector row = new Vector();
            row.add(km.getMaKM());
            row.add(km.getTenKM());
            row.add(km.getGiaDHToiThieu());
            row.add(km.getNgayBatDau());
            row.add(km.getNgayKetThuc());
            row.add(km.getPhanTramKhuyenMai());

            model.addRow(row);
            tblKhuyenMai.setModel(model);

            JOptionPane.showMessageDialog(this, "Thêm thành công!");
            try {
                resetTxt();
            } catch (Exception ex) {
                Logger.getLogger(KhuyenMaiFRM.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void DCNgayBatDauMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DCNgayBatDauMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_DCNgayBatDauMouseClicked

    private void DCNgayBatDauMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DCNgayBatDauMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_DCNgayBatDauMouseMoved

    private void txtPhanTramKMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhanTramKMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhanTramKMActionPerformed

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        // TODO add your handling code here:
        KM_CTKM_Frame show = new KM_CTKM_Frame();
        show.setVisible(true);
    }//GEN-LAST:event_btnShowActionPerformed

    private void xuatExcelFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xuatExcelFileActionPerformed
        String[] columnNames = {"Mã KM", "Tên KM", "Giá ĐH tối thiểu", "Ngày bắt đầu", "Ngày kết thúc", "Phần trăm KM"};
        try {
            XuatExcel xuat = new XuatExcel(tblKhuyenMai, columnNames, "Khuyến Mãi");
        } catch (IOException ex) {
            Logger.getLogger(KhuyenMaiFRM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_xuatExcelFileActionPerformed

    private void tblKhuyenMaiMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhuyenMaiMouseReleased
        if(evt.isPopupTrigger())
        {
            rightClickMenu.show(tblKhuyenMai, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_tblKhuyenMaiMouseReleased

    private void nhapExcelFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhapExcelFileActionPerformed
        // TODO add your handling code here:
        nhapExcel nhap = new nhapExcel(tblKhuyenMai);
        DefaultTableModel newModel = nhap.importExcel();
        if (newModel.getRowCount() > 0) {
            tblKhuyenMai.setModel(newModel);
            tblKhuyenMai = initHeaderColor(tblKhuyenMai, 14, 142, 233);
        }
    }//GEN-LAST:event_nhapExcelFileActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DCNgayBatDau;
    private com.toedter.calendar.JDateChooser DCNgayKetThuc;
    private javax.swing.JButton btnHienThiChiTiet;
    private javax.swing.JButton btnHienThiTatCa;
    private javax.swing.JButton btnHienThiTatCaChiTiet;
    private javax.swing.JButton btnShow;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> comboBoxMucTimKiem;
    private javax.swing.JLabel lblKhachHang;
    private javax.swing.JLabel lblMaHD;
    private javax.swing.JLabel lblMaKM;
    private javax.swing.JLabel lblNgayHD;
    private javax.swing.JLabel lblNhanVien;
    private javax.swing.JLabel lblTieuDe;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JMenuItem nhapExcelFile;
    private javax.swing.JPanel pnlChucNang;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JPopupMenu rightClickMenu;
    private javax.swing.JTable tblKhuyenMai;
    private javax.swing.JScrollPane tblScrollPane;
    private javax.swing.JTextField txtGiaDHToiThieu;
    private javax.swing.JTextField txtMaKM;
    private javax.swing.JTextField txtPhanTramKM;
    private javax.swing.JTextField txtTenKM;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JMenuItem xuatExcelFile;
    // End of variables declaration//GEN-END:variables
}
